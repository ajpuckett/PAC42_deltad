%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: anglestrento.dvi
%%BoundingBox: 133 287 503 511
%%DocumentFonts: Symbol Times-Italic
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E anglestrento
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.06.29:0928
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (anglestrento.dvi)
@start /Fa 151[31 20[31 83[{TeXBase1Encoding ReEncodeFont}2
61.4362 /Times-Italic rf
%DVIPSBitmapFont: Fc cmsy10 7.39999 2
/Fc 2 64 df<13F0EA01F81203A3EA07F0A313E0A2120F13C0A21380A2121F1300A3123E
A2123CA35AA3127012F05AA20D1F7EA111>48 D<140C141CB3B3007FB71280B8FC7E2929
7DA830>63 D E
%EndDVIPSBitmapFont
/Fd 147[23 24[42 2[51 80[{TeXBase1Encoding ReEncodeFont}3
83.022 /Times-Italic rf /Fe 153[43 102[{.167 SlantFont}1
83.022 /Symbol rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
1 0 bop 515 3598 a @beginspecial 0 @llx 0 @lly 1156 @urx
696 @ury 3685 @rwi @setspecial
%%BeginDocument: anglestemp.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: anglestemp.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Jun 29 09:25:00 2004
%%For: baa01032@pcph072 (Alessandro Bacchetta)
%%BoundingBox: 0 0 1156 696
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 696 moveto 0 0 lineto 1156 0 lineto 1156 696 lineto closepath clip newpath
-61.7 856.3 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
15.000 slw
n 12450 14250 m 19125 9225 l 6975 2700 l 1050 5100 l
 cp gs col0 s gr 
% Polyline
7.500 slw
 [75 37 15 37] 0 sd
n 18000 12675 m
 10297 7725 l gs col0 s gr  [] 0 sd
% Polyline
n 12300 9000 m 8700 11250 l 7425 10200 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
15.000 slw
n 8438 6533 m 12270 8993 l 7110 10395 l 2895 6900 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
2 slj
7.500 slw
n 7748 6086 m 7748 6083 l 7749 6077 l 7751 6068 l 7752 6057 l 7754 6045 l
 7755 6031 l 7756 6017 l 7757 6001 l 7757 5985 l 7756 5967 l
 7756 5955 l 7756 5949 l 7757 5945 l 7757 5942 l 7756 5938 l
 7753 5931 l 7745 5924 l 7737 5921 l 7730 5919 l 7725 5919 l
 7721 5920 l 7719 5921 l 7716 5923 l 7712 5924 l 7705 5927 l
 7695 5931 l 7681 5937 l 7663 5945 l 7651 5952 l 7644 5957 l
 7640 5960 l 7637 5963 l 7629 5969 l 7616 5977 l 7596 5989 l
 7576 6001 l 7563 6009 l 7556 6014 l 7552 6017 l 7548 6019 l
 7541 6023 l 7529 6030 l 7511 6038 l 7497 6044 l 7486 6048 l
 7479 6051 l 7475 6053 l 7472 6054 l 7470 6056 l 7467 6056 l
 7461 6057 l 7454 6055 l 7446 6052 l 7438 6045 l 7434 6038 l
 7433 6034 l 7433 6031 l 7434 6027 l 7434 6020 l 7434 6008 l
 7433 5990 l 7433 5974 l 7434 5961 l 7435 5952 l 7436 5946 l
 7436 5943 l 7437 5939 l 7438 5933 l 7440 5923 l 7442 5908 l
 7444 5889 l 7446 5870 l 7448 5855 l 7450 5845 l 7451 5839 l
 7453 5835 l 7454 5832 l 7455 5826 l 7456 5817 l 7457 5804 l
 7457 5788 l 7456 5770 l 7456 5758 l 7456 5751 l 7456 5748 l
 7456 5745 l 7454 5740 l 7450 5733 l 7442 5726 l 7434 5722 l
 7427 5721 l 7422 5721 l 7419 5721 l 7416 5722 l 7414 5724 l
 7410 5725 l 7403 5728 l 7393 5732 l 7379 5738 l 7364 5745 l
 7353 5751 l 7345 5756 l 7340 5760 l 7337 5762 l 7334 5765 l
 7330 5769 l 7321 5775 l 7308 5783 l 7292 5793 l 7272 5805 l
 7258 5814 l 7251 5819 l 7248 5822 l 7244 5824 l 7237 5828 l
 7225 5835 l 7207 5843 l 7193 5848 l 7183 5852 l 7176 5855 l
 7172 5857 l 7169 5858 l 7167 5859 l 7164 5860 l 7159 5860 l
 7152 5859 l 7144 5855 l 7136 5848 l 7132 5841 l 7131 5836 l
 7131 5833 l 7132 5830 l 7132 5823 l 7132 5811 l 7131 5793 l
 7131 5773 l 7133 5754 l 7135 5737 l 7137 5722 l 7139 5709 l
 7141 5699 l 7142 5695 l
 7142 5694 l gs col0 s gr 
% Polyline
0 slj
15.000 slw
gs  clippath
18810 11885 m 18660 11885 l 18660 12150 l 18735 11925 l 18810 12150 l cp
eoclip
n 18735 13160 m
 18735 11900 l gs col0 s gr gr

% arrowhead
n 18810 12150 m 18735 11925 l 18660 12150 l  col0 s
% Polyline
gs  clippath
19917 13997 m 19997 13870 l 19773 13729 l 19924 13913 l 19693 13856 l cp
eoclip
n 18745 13171 m
 19945 13926 l gs col0 s gr gr

% arrowhead
n 19693 13856 m 19924 13913 l 19773 13729 l  col0 s
% Polyline
gs  clippath
19724 12553 m 19637 12431 l 19462 12557 l 19652 12513 l 19549 12678 l cp
eoclip
n 18736 13171 m
 19669 12501 l gs col0 s gr gr

% arrowhead
n 19549 12678 m 19652 12513 l 19462 12557 l  col0 s
% Polyline
60.000 slw
gs  clippath
7863 4965 m 7658 5056 l 7761 5292 l 7774 5041 l 7967 5201 l cp
eoclip
n 8435 6540 m
 7767 5025 l gs col0 s gr gr

% arrowhead
15.000 slw
n 7967 5201 m 7774 5041 l 7761 5292 l 7967 5201 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
8566 9320 m 8715 9309 l 8691 8983 l 8638 9270 l 8541 8995 l cp
eoclip
n 8430 6532 m
 8640 9300 l gs col0 s gr gr

% arrowhead
n 8541 8995 m 8638 9270 l 8691 8983 l 8620 9045 l 8541 8995 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
7.500 slw
 [75 37 15 37] 0 sd
n 5917 4920 m
 3150 3135 l gs col0 s gr  [] 0 sd
% Polyline
15.000 slw
gs  clippath
5199 6684 m 5210 6833 l 5535 6810 l 5250 6756 l 5525 6661 l cp
eoclip
n 8410 6532 m
 5220 6758 l gs col0 s gr gr

% arrowhead
n 5525 6661 m 5250 6756 l 5535 6810 l 5474 6740 l 5525 6661 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
 [45] 0 sd
n 8648 9293 m
 5220 6765 l gs col0 s gr  [] 0 sd
% Polyline
 [45] 0 sd
n 10080 5723 m
 8450 6517 l gs col0 s gr  [] 0 sd
% Polyline
 [45] 0 sd
n 13838 8033 m
 12317 8981 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
5914 4996 m 5948 4850 l 5631 4774 l 5888 4913 l 5597 4920 l cp
eoclip
n 5917 4920 m
 3525 4350 l gs col0 s gr gr

% arrowhead
n 5597 4920 m 5888 4913 l 5631 4774 l 5669 4860 l 5597 4920 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
gs  clippath
7113 4788 m 7089 4640 l 6767 4692 l 7057 4722 l 6791 4840 l cp
eoclip
n 7087 4717 m
 5917 4905 l gs col0 s gr gr

% arrowhead
n 6791 4840 m 7057 4722 l 6767 4692 l 6834 4757 l 6791 4840 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
2 slj
7.500 slw
n 8358 6469 m 8359 6466 l 8360 6460 l 8362 6451 l 8364 6440 l 8367 6427 l
 8369 6414 l 8370 6399 l 8372 6384 l 8372 6367 l 8371 6349 l
 8370 6337 l 8370 6330 l 8370 6327 l 8370 6324 l 8368 6320 l
 8364 6313 l 8356 6306 l 8346 6302 l 8338 6301 l 8334 6301 l
 8331 6302 l 8328 6304 l 8322 6307 l 8311 6311 l 8294 6318 l
 8280 6325 l 8268 6331 l 8261 6336 l 8256 6339 l 8253 6342 l
 8251 6345 l 8246 6349 l 8238 6354 l 8225 6362 l 8209 6372 l
 8189 6384 l 8176 6392 l 8169 6397 l 8165 6399 l 8161 6402 l
 8155 6405 l 8142 6412 l 8124 6420 l 8107 6427 l 8095 6432 l
 8089 6435 l 8085 6437 l 8082 6439 l 8077 6440 l 8068 6440 l
 8058 6436 l 8051 6430 l 8047 6424 l 8046 6420 l 8045 6416 l
 8046 6413 l 8046 6410 l 8047 6406 l 8047 6398 l 8047 6387 l
 8046 6372 l 8046 6352 l 8047 6338 l 8048 6331 l 8048 6327 l
 8049 6322 l 8051 6314 l 8052 6298 l 8055 6274 l 8057 6254 l
 8059 6239 l 8061 6228 l 8062 6222 l 8063 6217 l 8065 6213 l
 8066 6207 l 8067 6197 l 8068 6183 l 8068 6167 l 8067 6149 l
 8067 6137 l 8067 6131 l 8067 6129 l 8067 6126 l 8066 6123 l
 8062 6117 l 8054 6110 l 8044 6106 l 8036 6105 l 8032 6106 l
 8029 6107 l 8026 6109 l 8020 6111 l 8009 6116 l 7992 6122 l
 7977 6128 l 7966 6134 l 7958 6138 l 7953 6141 l 7950 6143 l
 7947 6146 l 7942 6149 l 7933 6154 l 7921 6161 l 7904 6171 l
 7884 6183 l 7870 6191 l 7863 6196 l 7859 6199 l 7856 6202 l
 7849 6206 l 7837 6213 l 7819 6222 l 7805 6228 l 7795 6233 l
 7788 6236 l 7784 6239 l 7782 6241 l 7780 6242 l 7777 6244 l
 7772 6244 l 7765 6243 l 7757 6240 l 7751 6234 l 7746 6228 l
 7744 6224 l 7744 6220 l 7744 6217 l 7744 6214 l 7744 6209 l
 7744 6202 l 7744 6190 l 7743 6175 l 7743 6158 l 7744 6143 l
 7745 6129 l 7747 6115 l 7749 6103 l 7751 6092 l 7752 6084 l
 7753 6078 l
 7754 6075 l gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
10663 9411 m 10810 9442 l 10864 9182 l 10745 9387 l 10717 9151 l cp
eoclip
n 10740 9412 m 10749 9369 l 10754 9346 l 10759 9319 l 10765 9291 l 10771 9262 l
 10777 9234 l 10783 9208 l 10788 9184 l 10793 9162 l 10798 9141 l
 10802 9122 l 10807 9104 l 10811 9086 l 10815 9069 l 10820 9052 l
 10824 9034 l 10829 9016 l 10834 8997 l 10840 8978 l 10846 8959 l
 10852 8938 l 10859 8917 l 10866 8896 l 10873 8874 l 10881 8852 l
 10889 8831 l 10898 8809 l 10906 8787 l 10915 8766 l 10925 8744 l
 10934 8723 l 10944 8701 l 10953 8683 l 10962 8664 l 10971 8645 l
 10981 8625 l 10992 8605 l 11003 8583 l 11015 8561 l 11028 8539 l
 11041 8515 l 11055 8492 l 11069 8468 l 11084 8444 l 11098 8420 l
 11113 8396 l 11129 8372 l 11144 8349 l 11159 8327 l 11175 8304 l
 11190 8283 l 11205 8262 l 11220 8241 l 11236 8221 l 11250 8202 l
 11265 8183 l 11280 8165 l 11296 8146 l 11312 8127 l 11329 8107 l
 11346 8088 l 11364 8068 l 11383 8049 l 11401 8029 l 11420 8009 l
 11439 7990 l 11459 7971 l 11478 7952 l 11497 7934 l 11516 7916 l
 11535 7899 l 11554 7882 l 11572 7867 l 11590 7851 l 11608 7837 l
 11626 7823 l 11643 7809 l 11660 7796 l 11679 7783 l 11697 7769 l
 11717 7756 l 11736 7743 l 11756 7730 l 11776 7717 l 11797 7704 l
 11818 7692 l 11839 7680 l 11860 7668 l 11882 7656 l 11903 7645 l
 11924 7634 l 11945 7623 l 11966 7613 l 11986 7604 l 12006 7595 l
 12025 7587 l 12044 7579 l 12062 7571 l 12080 7564 l 12097 7557 l
 12117 7550 l 12136 7543 l 12156 7536 l 12176 7529 l 12196 7522 l
 12217 7515 l 12238 7509 l 12260 7503 l 12282 7497 l 12304 7491 l
 12326 7485 l 12348 7480 l 12369 7476 l 12390 7471 l 12411 7467 l
 12431 7464 l 12451 7461 l 12471 7458 l 12490 7455 l 12509 7453 l
 12528 7451 l 12548 7449 l 12568 7448 l 12588 7447 l 12609 7446 l
 12630 7445 l 12652 7445 l 12674 7445 l 12697 7446 l 12719 7446 l
 12741 7447 l 12764 7449 l 12785 7450 l 12807 7452 l 12827 7454 l
 12847 7457 l 12867 7460 l 12886 7462 l 12904 7466 l 12922 7469 l
 12941 7473 l 12961 7478 l 12980 7483 l 13000 7489 l 13021 7495 l
 13041 7501 l 13062 7509 l 13082 7516 l 13103 7525 l 13123 7533 l
 13143 7542 l 13163 7551 l 13182 7560 l 13200 7570 l 13217 7579 l
 13234 7589 l 13250 7599 l 13266 7609 l 13282 7619 l 13298 7630 l
 13314 7641 l 13330 7653 l 13347 7665 l 13363 7679 l 13380 7692 l
 13396 7706 l 13413 7721 l 13429 7736 l 13445 7750 l 13460 7765 l
 13474 7780 l 13488 7794 l 13500 7808 l 13513 7822 l 13524 7836 l
 13535 7850 l 13547 7866 l 13558 7882 l 13569 7898 l 13581 7916 l
 13593 7936 l 13605 7958 l 13618 7981 l 13632 8007 l 13646 8033 l
 13659 8059 l 13672 8083 l 13682 8103 l 13689 8117 l 13693 8126 l
 13695 8129 l
 13695 8130 l gs col0 s gr gr

% arrowhead
0 slj
n 10717 9151 m 10745 9387 l 10864 9182 l  col0 s
% Polyline
2 slj
gs  clippath
7933 5332 m 7999 5466 l 8238 5350 l 8003 5382 l 8172 5216 l cp
eoclip
n 7980 5393 m 8019 5374 l 8040 5364 l 8065 5352 l 8091 5339 l 8118 5327 l
 8143 5315 l 8168 5304 l 8191 5293 l 8212 5284 l 8232 5275 l
 8251 5267 l 8269 5260 l 8287 5253 l 8305 5246 l 8323 5240 l
 8342 5233 l 8361 5227 l 8381 5220 l 8402 5214 l 8423 5208 l
 8446 5201 l 8469 5195 l 8492 5189 l 8515 5184 l 8539 5179 l
 8562 5174 l 8585 5169 l 8608 5165 l 8630 5162 l 8652 5158 l
 8673 5155 l 8694 5153 l 8713 5151 l 8733 5149 l 8753 5148 l
 8773 5147 l 8794 5146 l 8815 5145 l 8837 5145 l 8859 5145 l
 8882 5146 l 8904 5146 l 8926 5147 l 8949 5149 l 8970 5150 l
 8992 5152 l 9012 5154 l 9032 5157 l 9052 5160 l 9071 5162 l
 9089 5166 l 9107 5169 l 9126 5173 l 9146 5178 l 9165 5183 l
 9185 5189 l 9206 5195 l 9226 5201 l 9247 5209 l 9267 5216 l
 9288 5225 l 9308 5233 l 9328 5242 l 9348 5251 l 9367 5260 l
 9385 5270 l 9402 5279 l 9419 5289 l 9435 5299 l 9451 5309 l
 9467 5319 l 9483 5330 l 9499 5341 l 9515 5353 l 9532 5365 l
 9548 5379 l 9565 5392 l 9581 5406 l 9598 5421 l 9614 5436 l
 9630 5450 l 9645 5465 l 9659 5480 l 9673 5494 l 9685 5508 l
 9698 5522 l 9709 5536 l 9720 5550 l 9732 5566 l 9743 5582 l
 9754 5598 l 9766 5616 l 9778 5636 l 9790 5658 l 9803 5681 l
 9817 5707 l 9831 5733 l 9844 5759 l 9857 5783 l 9867 5803 l
 9874 5817 l 9878 5826 l 9880 5829 l
 9880 5830 l gs col0 s gr gr

% arrowhead
0 slj
n 8172 5216 m 8003 5382 l 8238 5350 l  col0 s
% Polyline
2 slj
7.500 slw
n 6525 5313 m 6526 5310 l 6527 5304 l 6529 5295 l 6531 5284 l 6534 5271 l
 6536 5258 l 6537 5243 l 6539 5228 l 6539 5211 l 6538 5193 l
 6537 5181 l 6537 5174 l 6537 5171 l 6537 5168 l 6535 5164 l
 6531 5157 l 6523 5150 l 6513 5146 l 6505 5145 l 6501 5145 l
 6498 5146 l 6495 5148 l 6489 5151 l 6478 5155 l 6461 5162 l
 6447 5169 l 6435 5175 l 6428 5180 l 6423 5183 l 6420 5186 l
 6418 5189 l 6413 5193 l 6405 5198 l 6392 5206 l 6376 5216 l
 6356 5228 l 6343 5236 l 6336 5241 l 6332 5243 l 6328 5246 l
 6322 5249 l 6309 5256 l 6291 5264 l 6274 5271 l 6262 5276 l
 6256 5279 l 6252 5281 l 6249 5283 l 6244 5284 l 6235 5284 l
 6225 5280 l 6218 5274 l 6214 5268 l 6213 5264 l 6212 5260 l
 6213 5257 l 6213 5254 l 6214 5250 l 6214 5242 l 6214 5231 l
 6213 5216 l 6213 5196 l 6214 5182 l 6215 5175 l 6215 5171 l
 6216 5166 l 6218 5158 l 6219 5142 l 6222 5118 l 6224 5098 l
 6226 5083 l 6228 5072 l 6229 5066 l 6230 5061 l 6232 5057 l
 6233 5051 l 6234 5041 l 6235 5027 l 6235 5011 l 6234 4993 l
 6234 4981 l 6234 4975 l 6234 4973 l 6234 4970 l 6233 4967 l
 6229 4961 l 6221 4954 l 6211 4950 l 6203 4949 l 6199 4950 l
 6196 4951 l 6193 4953 l 6187 4955 l 6176 4960 l 6159 4966 l
 6144 4972 l 6133 4978 l 6125 4982 l 6120 4985 l 6117 4987 l
 6114 4990 l 6109 4993 l 6100 4998 l 6088 5005 l 6071 5015 l
 6051 5027 l 6037 5035 l 6030 5040 l 6026 5043 l 6023 5046 l
 6016 5050 l 6004 5057 l 5986 5066 l 5972 5072 l 5962 5077 l
 5955 5080 l 5951 5083 l 5949 5085 l 5947 5086 l 5944 5088 l
 5939 5088 l 5932 5087 l 5924 5084 l 5918 5078 l 5913 5072 l
 5911 5068 l 5911 5064 l 5911 5061 l 5911 5058 l 5911 5053 l
 5911 5046 l 5911 5034 l 5910 5019 l 5910 5002 l 5911 4987 l
 5912 4973 l 5914 4959 l 5916 4947 l 5918 4936 l 5919 4928 l
 5920 4922 l
 5921 4919 l gs col0 s gr 
/Times-Roman ff 510.00 scf sf
18660 11640 m
gs 1 -1 sc (y) col0 sh gr
/Times-Roman ff 510.00 scf sf
20055 14160 m
gs 1 -1 sc (z) col0 sh gr
/Times-Roman ff 510.00 scf sf
19778 12465 m
gs 1 -1 sc (x) col0 sh gr
/Times-Italic ff 480.00 scf sf
5283 8545 m
gs 1 -1 sc  321.0 rot (hadron plane) col0 sh gr
/Times-Italic ff 480.00 scf sf
10650 12525 m
gs 1 -1 sc  322.0 rot (lepton plane) col0 sh gr
15.000 slw
% Ellipse
n 8430 6515 148 148 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Polyline
7.500 slw
n 7139 5690 m 7140 5687 l 7141 5681 l 7143 5672 l 7145 5661 l 7147 5649 l
 7149 5636 l 7151 5622 l 7152 5606 l 7152 5590 l 7151 5572 l
 7151 5560 l 7150 5553 l 7151 5550 l 7151 5547 l 7149 5542 l
 7145 5535 l 7137 5528 l 7127 5524 l 7119 5523 l 7115 5523 l
 7112 5524 l 7109 5526 l 7103 5529 l 7092 5533 l 7075 5540 l
 7061 5547 l 7049 5553 l 7041 5558 l 7037 5561 l 7034 5564 l
 7031 5567 l 7027 5570 l 7018 5576 l 7006 5584 l 6989 5594 l
 6972 5604 l 6959 5611 l 6951 5616 l 6946 5620 l 6943 5622 l
 6940 5624 l 6935 5626 l 6927 5631 l 6916 5636 l 6901 5643 l
 6884 5650 l 6873 5654 l 6867 5658 l 6864 5660 l 6861 5662 l
 6856 5662 l 6849 5662 l 6839 5658 l 6833 5652 l 6829 5646 l
 6827 5642 l 6826 5639 l 6827 5636 l 6827 5633 l 6827 5629 l
 6827 5621 l 6827 5610 l 6826 5595 l 6826 5579 l 6826 5566 l
 6827 5557 l 6828 5552 l 6828 5549 l 6829 5545 l 6830 5539 l
 6831 5530 l 6833 5515 l 6835 5495 l 6837 5475 l 6839 5460 l
 6841 5449 l 6842 5443 l 6843 5438 l 6845 5434 l 6846 5428 l
 6847 5419 l 6848 5405 l 6848 5389 l 6847 5371 l 6847 5360 l
 6847 5354 l 6847 5351 l 6847 5348 l 6846 5345 l 6842 5339 l
 6834 5332 l 6824 5328 l 6817 5327 l 6812 5328 l 6810 5329 l
 6807 5331 l 6801 5333 l 6790 5338 l 6773 5344 l 6758 5351 l
 6747 5356 l 6739 5361 l 6734 5364 l 6731 5366 l 6728 5368 l
 6723 5372 l 6715 5377 l 6702 5385 l 6685 5394 l 6665 5406 l
 6651 5414 l 6643 5418 l 6639 5421 l 6635 5424 l 6628 5428 l
 6616 5434 l 6598 5443 l 6581 5450 l 6570 5456 l 6564 5459 l
 6561 5462 l 6559 5464 l 6554 5466 l 6547 5465 l 6537 5462 l
 6531 5456 l 6527 5450 l 6525 5446 l 6524 5442 l 6525 5439 l
 6525 5436 l 6525 5431 l 6525 5424 l 6525 5412 l 6524 5397 l
 6524 5380 l 6525 5365 l 6526 5351 l 6527 5337 l 6529 5325 l
 6530 5314 l 6532 5306 l 6533 5300 l
 6533 5297 l gs col0 s gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 1450 2028 a Fd(l)1477 1998 y Fc(0)870 2096
y Fd(l)1593 2105 y(S)1635 2133 y Fc(?)1768 2765 y Fd(P)1809
2793 y Fa(h)1236 2340 y Fd(P)1277 2368 y Fa()p Fc(?)2333
2459 y Fe(f)2376 2486 y Fa(h)1837 2105 y Fe(f)1880 2131
y Fa(S)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
