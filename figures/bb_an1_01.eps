%!PS-Adobe-2.0 EPSF-2.0
%%Title: bb_an1_01.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Jul  3 20:08:25 2006
%%For: vvn2c@robin.phys.virginia.edu (Vladimir V. Nelyubin)
%%BoundingBox: 0 0 762 468
%%Magnification: 0.6000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 468 moveto 0 0 lineto 762 0 lineto 762 468 lineto closepath clip newpath
15.3 856.9 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004010002008001004000802000401000200
	8001004000802000401080200040100020080010
	0400080200040100020080010040008020004010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

% crosshatch lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 16 true [ 16 0 0 -16 0 16 ]
	{<ffff111111111111ffff111111111111ffff111111111111
	ffff111111111111>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P11 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Helvetica-Bold /Helvetica-Bold-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.03780 0.03780 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Arc
7.500 slw
gs  clippath
5546 13453 m 5598 13482 l 5673 13351 l 5588 13441 l 5621 13321 l cp
6240 11236 m 6180 11233 l 6174 11385 l 6209 11267 l 6234 11388 l cp
eoclip
n 1708.1 11156.2 4502.9 1.2 30.7 arc
gs col0 s gr
 gr

% arrowhead
n 5621 13321 m 5588 13441 l 5673 13351 l  col0 s
% arrowhead
n 6234 11388 m 6209 11267 l 6174 11385 l  col0 s
% Polyline
n 1868 11133 m
 1687 11445 l gs col0 s gr 
% Polyline
n 1800 11250 m
 1605 11138 l gs col0 s gr 
% Polyline
15.000 slw
n 7354 13781 m 8328 14343 l 8710 13681 l 7736 13118 l
 7354 13781 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P11 [16 0 0 -16 490.27 874.53] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 10929 15689 m 12137 16386 l 12542 15685 l 11334 14987 l
 10929 15689 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P11 [16 0 0 -16 728.60 999.13] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 13447 15376 m 13252 15264 l 12532 16511 l 12727 16624 l
 13447 15376 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 835.47 1017.60] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 14969 15891 m 14774 15779 l 14054 17026 l 14249 17138 l
 14969 15891 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 936.93 1051.93] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 18983 18209 m 18788 18096 l 18068 19343 l 18263 19456 l
 18983 18209 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 1204.53 1206.40] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 12571 16534 m
 12166 17235 l gs col0 s gr 
% Polyline
n 12688 16601 m
 12283 17303 l gs col0 s gr 
% Polyline
n 14093 17048 m
 13530 18023 l gs col0 s gr 
% Polyline
n 14210 17116 m
 13647 18090 l gs col0 s gr 
% Polyline
n 18107 19366 m
 17544 20340 l gs col0 s gr 
% Polyline
n 18224 19433 m
 17639 20446 l gs col0 s gr 
% Polyline
n 13881 18225 m 14511 17134 l 17863 19069 l
 17233 20160 l gs col7 0.90 shd ef gr gs col0 s gr 
% Polyline
7.500 slw
n 1800 11250 m
 17778 20475 l gs col0 s gr 
% Polyline
15.000 slw
n 6769 14794 m 7743 15357 l 7360 16019 l 6386 15457 l
 6769 14794 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P11 [16 0 0 -16 425.73 986.27] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 10209 16936 m 11417 17634 l 11012 18335 l 9804 17638 l
 10209 16936 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P11 [16 0 0 -16 653.60 1129.07] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 11197 19274 m 11002 19161 l 11722 17914 l 11917 18026 l
 11197 19274 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 733.47 1194.27] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 11878 18004 m
 12283 17303 l gs col0 s gr 
% Polyline
n 11761 17936 m
 12166 17235 l gs col0 s gr 
% Polyline
n 12968 18997 m
 13530 18023 l gs col0 s gr 
% Polyline
n 13085 19064 m
 13647 18090 l gs col0 s gr 
% Polyline
n 12404 20334 m 12209 20221 l 12929 18974 l 13124 19087 l
 12404 20334 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 813.93 1264.93] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 13881 18225 m 13251 19316 l 16603 21251 l
 17233 20160 l gs col7 0.90 shd ef gr gs col0 s gr 
% Polyline
n 16418 22651 m 16223 22539 l 16943 21292 l 17138 21404 l
 16418 22651 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 1081.53 1419.47] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 16982 21314 m
 17544 20340 l gs col0 s gr 
% Polyline
n 17099 21382 m
 17684 20369 l gs col0 s gr 
% Polyline
n 8823 13486 m 8710 13681 l 8551 14316 l 8601 14501 l 10588 15648 l 10773 15599 l
 11356 14949 l
 11469 14754 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 570.07 899.07] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7248 16214 m 7360 16019 l 7831 15564 l 8016 15514 l 10003 16662 l 10053 16846 l
 9781 17676 l
 9669 17871 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 483.20 1034.27] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
6306 14545 m 6358 14574 l 6433 14444 l 6348 14533 l 6381 14414 l cp
6958 13534 m 6906 13505 l 6831 13635 l 6917 13547 l 6883 13665 l cp
eoclip
n 6925 13533 m
 6340 14547 l gs col0 s gr gr

% arrowhead
n 6883 13665 m 6917 13547 l 6831 13635 l  col0 s
% arrowhead
n 6381 14414 m 6348 14533 l 6433 14444 l  col0 s
% Polyline
n 6165 14445 m
 6795 14805 l gs col0 s gr 
% Polyline
n 6750 13455 m
 7335 13770 l gs col0 s gr 
% Polyline
n 225 11250 m
 6480 11250 l gs col0 s gr 
% Polyline
15.000 slw
n 1125 11340 m 1125 11160 l 2475 11160 l 2475 11340 l
 1125 11340 l  cp gs col0 s gr 
% Polyline
7.500 slw
n 1125 11160 m
 1125 10575 l gs col0 s gr 
% Polyline
n 2475 11160 m
 2475 10575 l gs col0 s gr 
% Polyline
gs  clippath
2490 10740 m 2490 10680 l 2338 10680 l 2458 10710 l 2338 10740 l cp
1110 10680 m 1110 10740 l 1262 10740 l 1142 10710 l 1262 10680 l cp
eoclip
n 1125 10710 m
 2475 10710 l gs col0 s gr gr

% arrowhead
n 1262 10680 m 1142 10710 l 1262 10740 l  col0 s
% arrowhead
n 2338 10740 m 2458 10710 l 2338 10680 l  col0 s
% Polyline
15.000 slw
gs  clippath
1095 11310 m 1095 11190 l 808 11190 l 1048 11250 l 808 11310 l cp
eoclip
n -270 11250 m
 1080 11250 l gs col0 s gr gr

% arrowhead
n 808 11310 m 1048 11250 l 808 11190 l 808 11310 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
n 16425 16920 m 16515 17010 l
 16605 16920 l gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
3390 10425 m 3390 10365 l 3239 10365 l 3359 10395 l 3239 10425 l cp
eoclip
n 3060 10395 m
 3375 10395 l gs col0 s gr gr

% arrowhead
n 3239 10425 m 3359 10395 l 3239 10365 l 3239 10425 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
n 3015 10395 m
 3240 10395 l gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
17891 21831 m 17943 21862 l 18019 21731 l 17933 21820 l 17967 21701 l cp
19083 19901 m 19031 19870 l 18955 20001 l 19042 19913 l 19007 20031 l cp
eoclip
n 19050 19899 m
 17925 21834 l gs col0 s gr gr

% arrowhead
n 19007 20031 m 19042 19913 l 18955 20001 l  col0 s
% arrowhead
n 17967 21701 m 17933 21820 l 18019 21731 l  col0 s
% Polyline
n 18270 19485 m
 19125 19980 l gs col0 s gr 
% Polyline
n 17130 21402 m
 17985 21897 l gs col0 s gr 
/Helvetica-Bold-iso ff 375.00 scf sf
6403 14167 m
gs 1 -1 sc  60.0 rot (250) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
5400 12375 m
gs 1 -1 sc (30) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
5760 12105 m
gs 1 -1 sc (o) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
1485 10575 m
gs 1 -1 sc (300) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
15615 17415 m
gs 1 -1 sc (Gas C) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
2790 10575 m
gs 1 -1 sc (3) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
2970 10845 m
gs 1 -1 sc (He target) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
-405 11070 m
gs 1 -1 sc (e-beam) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
12645 15075 m
gs 1 -1 sc (355 X 1422) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
14895 15705 m
gs 1 -1 sc (500 x 2000) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
17955 17910 m
gs 1 -1 sc (500 x 2000) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
15120 15210 m
gs 1 -1 sc (MWDC2) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
12915 14535 m
gs 1 -1 sc (MWDC1) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
18225 17370 m
gs 1 -1 sc (MWDC3) col0 sh gr
/Helvetica-Bold-iso ff 375.00 scf sf
18180 21150 m
gs 1 -1 sc  60.0 rot (500) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
